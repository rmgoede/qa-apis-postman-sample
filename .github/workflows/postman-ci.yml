name: API Tests

on:
  push:
    branches: [ "main" ]
    paths:
      - 'postman/**'
      - '.github/workflows/postman-ci.yml'
  pull_request:
    paths:
      - 'postman/**'
      - '.github/workflows/postman-ci.yml'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  newman:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install newman + html reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Run Postman collection (time it) & create badge
        run: |
          mkdir -p newman
          start_ts=$(date +%s)

          # Run newman and capture pass/fail without stopping the job yet
          if newman run "postman/Postman Library API V2.postman_collection.json" \
              --env-var baseUrl=https://library-api.postmanlabs.com \
              --reporters cli,htmlextra,junit \
              --reporter-htmlextra-export "newman/report.html" \
              --reporter-junit-export "newman/results.xml"; then
            status="passed"
            color="brightgreen"
            exit_code=0
          else
            status="failed"
            color="red"
            exit_code=1
          fi

          end_ts=$(date +%s)
          duration=$(( end_ts - start_ts ))

          # Shields.io endpoint JSON for the duration badge
          printf '{"schemaVersion":1,"label":"test duration","message":"%ss (%s)","color":"%s"}' "$duration" "$status" "$color" > newman/badge.json

          # If you want the job to still fail when tests fail, exit with the captured code
          exit $exit_code
          
      - name: Add report link to job summary
        if: ${{ always() }}
        run: |
          echo "## Newman Report" >> $GITHUB_STEP_SUMMARY
          echo "- HTML: https://rmgoede.github.io/qa-apis-postman-sample/report.html" >> $GITHUB_STEP_SUMMARY
          echo "- Duration badge JSON: https://rmgoede.github.io/qa-apis-postman-sample/badge.json" >> $GITHUB_STEP_SUMMARY


      # Downloadable CI artifact (HTML + JUnit)
      - name: Upload CI artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: newman-report
          path: newman/
          if-no-files-found: ignore
          retention-days: 7

      # Pages artifact for next job
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: newman

  deploy-pages:
    needs: newman
    if: ${{ success() }}
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
